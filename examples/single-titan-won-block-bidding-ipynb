{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f7061eee",
   "metadata": {},
   "source": [
    "Research on Titan's winning blocks\n",
    "\n",
    "Author: Tripoli - Data Always \\ Bryanzk\n",
    "Date Modified: December 11, 2023 \\ 2024.04.11\n",
    "License: CC0"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97e3ec34",
   "metadata": {},
   "source": [
    "# Data Schema for winning block bid history data\n",
    "block_datetime: datetime64[ns]\n",
    "slot: int64\n",
    "block_number: int64\n",
    "block_hash: str\n",
    "value: str\n",
    "base_fee_per_gas: uint64\n",
    "gas_limit: float64\n",
    "gas_used: int64\n",
    "num_tx: int64\n",
    "builder_label: str\n",
    "builder_pubkey: str\n",
    "relay: str\n",
    "bid_timestamp_ms: float64\n",
    "slot_time_ms: float64\n",
    "proposer_pubkey: str\n",
    "proposer_mev_recipient: str\n",
    "optimistic_submission: bool\n",
    "builder_fee_recipient: str\n",
    "block_timestamp: uint32\n",
    "extra_data: str\n",
    "payload_delivered: bool"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9b92216",
   "metadata": {},
   "source": [
    "# public keys from Titan: https://docs.titanbuilder.xyz/builder-public-keys \n",
    "\n",
    "0x94a076b27f294dc44b9fd44d8e2b063fb129bc85ed047da1cefb82d16e1a13e6b50de31a86f5b233d1e6bbaca3c69173\n",
    "\n",
    "0xabf1ad5ec0512cb1adabe457882fa550b4935f1f7df9658e46af882049ec16da698c323af8c98c3f1f9570ebc4042a83\n",
    "\n",
    "0xb67eaa5efcfa1d17319c344e1e5167811afbfe7922a2cf01c9a361f465597a5dc3a5472bd98843bac88d2541a78eab08\n",
    "\n",
    "0xb26f96664274e15fb6fcda862302e47de7e0e2a6687f8349327a9846043e42596ec44af676126e2cacbdd181f548e681\n",
    "\n",
    "0x95c8cc31f8d4e54eddb0603b8f12d59d466f656f374bde2073e321bdd16082d420e3eef4d62467a7ea6b83818381f742\n",
    "\n",
    "0x8509ecb595da0eda2c6fced4e287f0510a2c2dba5f80ee930503ef86e268d808a6df25e397177da06cd479771ce66840\n",
    "\n",
    "0xa32aadb23e45595fe4981114a8230128443fd5407d557dc0c158ab93bc2b88939b5a87a84b6863b0d04a4b5a2447f847\n",
    "\n",
    "0xae2ffc6986c9a368c5ad2d51f86db2031d780f6ac9b2348044dea4e3a75808b566c935099de8b1a1609db322f2110e7a\n",
    "\n",
    "0xb4a435cf816291596fe2e405651ec8b6c80b9cc34dace3c83202ca489a833756c9a0672ebdc17f23d9d43163db1caa5d\n",
    "\n",
    "0xb47963246adef02cd3e61cbb648c04fd99b05e28a616aef3aa7fb688c17b10d1ce9662b61a600efbdd110e93d62d5144\n",
    "\n",
    "0xaf10542267816e91adbc8f4a6754765d492534f8325f34a2e89caa2ba45c7158f6deaa6e7fb454ebb6f6a1495fe63dba\n",
    "\n",
    "0x94829e6f7a598a2f2dfdd9e1246d7cfdc30a626666d9419f3c147cc954507e97184c598dc109f4d05c2139c48af6746c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8e487988",
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_prep_utils import *\n",
    "# prep the single block number for the single block bidding analysis\n",
    "singleBlockNumber = 19440423"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "953f5f64",
   "metadata": {},
   "outputs": [],
   "source": [
    "dft = get_titan_won_921_blocks_bidding_data()\n",
    "unique_block_numbers_won_by_titan = dft['block_number'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6883880e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = get_block_data_with_winning_bids()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c787f554",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Code below is to check if there are any records with the same block_number but different bid_timestamp\n",
    "## and the recult is yes. like block: 18320012\n",
    "# Get rows with duplicate block_numbers\n",
    "# dups = df[df.duplicated(subset=['block_number'], keep=False)]\n",
    "\n",
    "# # Check if any of those rows have different bid_timestamp\n",
    "# dups_diff_bid = dups[dups.duplicated(subset=['block_number', 'bid_timestamp_ms'], keep=False)]\n",
    "\n",
    "# if not dups_diff_bid.empty:\n",
    "#     print(\"Found records with same block_number but different bid_timestamp:\")\n",
    "#     display(dups_diff_bid)\n",
    "# else:\n",
    "#     print(\"No records found with same block_number and different bid_timestamp.\") \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f162494c",
   "metadata": {},
   "outputs": [],
   "source": [
    "## This section is used to prep builder related dataset for future grouping.\n",
    "\n",
    "df_builder_info = get_builder_info()\n",
    "\n",
    "unique_labels = df_builder_info['builder_label'].unique()\n",
    "# prep titan builder data frame\n",
    "titan_builder_labels = df_builder_info[df_builder_info['builder_label'].str.contains('titan', case=False)]\n",
    "\n",
    "# prep EigenPhi builder data frame\n",
    "eigenphi_builder_labels = df_builder_info[df_builder_info['builder_label'].str.contains('eigenphi', case=False)]\n",
    "\n",
    "# prep rsync builder data frame\n",
    "rsync_builder_labels = df_builder_info[df_builder_info['builder_label'].str.contains('rsync', case=False)]\n",
    "\n",
    "# prep beaver builder data frame\n",
    "beaver_builder_labels = df_builder_info[df_builder_info['builder_label'].str.contains('beaver', case=False)]\n",
    "\n",
    "# # The code below can be used to check Titan's pubkeys: current vs.\n",
    "# current_titan_pub_key_set = set(titan_pub_key_list)\n",
    "# total_titan_labels_set = set(titan_labels['builder_pubkey'])\n",
    "\n",
    "# only_in_titan_labels = total_titan_labels_set.difference(current_titan_pub_key_set)\n",
    "# print(f\"builder_pubkey's in total titan_labels but not in current titan_pub_key_list:\\n {only_in_titan_labels}\")\n",
    "# # 计算差集\n",
    "# only_in_titan_pub_key_list = current_titan_pub_key_set.difference(total_titan_labels_set)\n",
    "\n",
    "# # 输出结果\n",
    "# print(f\"builder_pubkey's in current titan_pub_key_list but not in total titan_labels:\\n {only_in_titan_pub_key_list}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "07b1fd1f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2448\n"
     ]
    }
   ],
   "source": [
    "# analyze the bidding of block 19440930\n",
    "dftb_0930 = dft[dft['block_number'] == singleBlockNumber]\n",
    "\n",
    "# get the winning bid block info for reference\n",
    "df_0930 = df[df['block_number'] == singleBlockNumber]\n",
    "\n",
    "# now let's calculate the time difference\n",
    "# take out the block final timestamp\n",
    "# get the time difference between block final timestamp and bid timestamp\n",
    "\n",
    "# Remove the ' UTC' from timestamp strings and convert to datetime\n",
    "dftb_0930.loc[:, 'block_timestamp'] = pd.to_datetime(dftb_0930['block_timestamp'].str.replace(' UTC', ''), format='%Y-%m-%d %H:%M:%S', errors='coerce')\n",
    "dftb_0930.loc[:, 'timestamp'] = pd.to_datetime(dftb_0930['timestamp'].str.replace(' UTC', ''), format='%Y-%m-%d %H:%M:%S.%f', errors='coerce')\n",
    "\n",
    "# 计算时间差并且存储在新的 Dataframe 中 Calculate the time difference and store it in a new Dataframe.\n",
    "ts_diff_df = (dftb_0930['block_timestamp'] - dftb_0930['timestamp']).apply(lambda x: x.total_seconds()) * 1000\n",
    "\n",
    "# 添加新的列到原始的 Dataframe 中.  Add a new column, ts_diff, as ms difference, to the original Dataframe.\n",
    "# if ts_diff > 0, bid before 12s, if ts_diff<0, bid after 12s\n",
    "dftb_0930 = pd.concat([dftb_0930, ts_diff_df.rename('ts_diff')], axis=1)\n",
    "\n",
    "print(dftb_0930.shape[0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "07a584cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "min:-3.0; max:7.0\n",
      "Merged rows:2448\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/mf/lxpn1ltx7t97r1v1k92vly1w0000gn/T/ipykernel_27442/1353726915.py:30: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n",
      "  grouped = merged_df.groupby(['builder_label', 'ts_diff_bins']).size().unstack(fill_value=0)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>builder_label</th>\n",
       "      <th>@rsyncbuilder</th>\n",
       "      <th>BuildAI (https://buildai.net)</th>\n",
       "      <th>Builder+ www.btcs.com/builder</th>\n",
       "      <th>EigenPhi</th>\n",
       "      <th>Flashbots</th>\n",
       "      <th>Gambit Labs</th>\n",
       "      <th>Manifold: coinbase</th>\n",
       "      <th>Powered by bloXroute</th>\n",
       "      <th>Titan (titanbuilder.xyz)</th>\n",
       "      <th>beaverbuild.org</th>\n",
       "      <th>by @builder0x69</th>\n",
       "      <th>lokibuilder.xyz</th>\n",
       "      <th>rpc.fullblock.space</th>\n",
       "      <th>rpc.tbuilder.xyz</th>\n",
       "      <th>rsync-builder.xyz</th>\n",
       "      <th>smithbot.xyz</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ts_diff_bins</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(-3.0, -2.9]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(-2.9, -2.8]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(-2.8, -2.7]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(-2.7, -2.6]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(-2.6, -2.5]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(6.5, 6.6]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(6.6, 6.7]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(6.7, 6.8]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(6.8, 6.9]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(6.9, 7.0]</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "builder_label  @rsyncbuilder  BuildAI (https://buildai.net)  \\\n",
       "ts_diff_bins                                                  \n",
       "(-3.0, -2.9]               0                              0   \n",
       "(-2.9, -2.8]               0                              0   \n",
       "(-2.8, -2.7]               0                              0   \n",
       "(-2.7, -2.6]               0                              0   \n",
       "(-2.6, -2.5]               0                              0   \n",
       "...                      ...                            ...   \n",
       "(6.5, 6.6]                 0                              0   \n",
       "(6.6, 6.7]                 0                              0   \n",
       "(6.7, 6.8]                 0                              0   \n",
       "(6.8, 6.9]                 0                              0   \n",
       "(6.9, 7.0]                 0                              0   \n",
       "\n",
       "builder_label  Builder+ www.btcs.com/builder  EigenPhi  Flashbots  \\\n",
       "ts_diff_bins                                                        \n",
       "(-3.0, -2.9]                               0         0          0   \n",
       "(-2.9, -2.8]                               0         0          0   \n",
       "(-2.8, -2.7]                               0         0          0   \n",
       "(-2.7, -2.6]                               0         0          0   \n",
       "(-2.6, -2.5]                               0         0          0   \n",
       "...                                      ...       ...        ...   \n",
       "(6.5, 6.6]                                 0         0          0   \n",
       "(6.6, 6.7]                                 0         0          0   \n",
       "(6.7, 6.8]                                 0         0          0   \n",
       "(6.8, 6.9]                                 0         0          0   \n",
       "(6.9, 7.0]                                 0         0          0   \n",
       "\n",
       "builder_label  Gambit Labs  Manifold: coinbase  Powered by bloXroute  \\\n",
       "ts_diff_bins                                                           \n",
       "(-3.0, -2.9]             0                   0                     0   \n",
       "(-2.9, -2.8]             0                   0                     0   \n",
       "(-2.8, -2.7]             0                   0                     0   \n",
       "(-2.7, -2.6]             0                   0                     0   \n",
       "(-2.6, -2.5]             0                   0                     0   \n",
       "...                    ...                 ...                   ...   \n",
       "(6.5, 6.6]               0                   0                     0   \n",
       "(6.6, 6.7]               0                   0                     0   \n",
       "(6.7, 6.8]               0                   0                     0   \n",
       "(6.8, 6.9]               0                   0                     0   \n",
       "(6.9, 7.0]               0                   0                     0   \n",
       "\n",
       "builder_label  Titan (titanbuilder.xyz)  beaverbuild.org  by @builder0x69  \\\n",
       "ts_diff_bins                                                                \n",
       "(-3.0, -2.9]                          0                0                0   \n",
       "(-2.9, -2.8]                          0                1                0   \n",
       "(-2.8, -2.7]                          0                0                0   \n",
       "(-2.7, -2.6]                          0                3                0   \n",
       "(-2.6, -2.5]                          0                1                0   \n",
       "...                                 ...              ...              ...   \n",
       "(6.5, 6.6]                            0                0                0   \n",
       "(6.6, 6.7]                            0                0                0   \n",
       "(6.7, 6.8]                            0                0                0   \n",
       "(6.8, 6.9]                            0                0                0   \n",
       "(6.9, 7.0]                            0                0                0   \n",
       "\n",
       "builder_label  lokibuilder.xyz  rpc.fullblock.space  rpc.tbuilder.xyz  \\\n",
       "ts_diff_bins                                                            \n",
       "(-3.0, -2.9]                 0                    0                 0   \n",
       "(-2.9, -2.8]                 0                    0                 0   \n",
       "(-2.8, -2.7]                 0                    0                 0   \n",
       "(-2.7, -2.6]                 0                    0                 0   \n",
       "(-2.6, -2.5]                 0                    0                 0   \n",
       "...                        ...                  ...               ...   \n",
       "(6.5, 6.6]                   0                    0                 0   \n",
       "(6.6, 6.7]                   0                    0                 0   \n",
       "(6.7, 6.8]                   0                    0                 0   \n",
       "(6.8, 6.9]                   0                    0                 0   \n",
       "(6.9, 7.0]                   0                    0                 0   \n",
       "\n",
       "builder_label  rsync-builder.xyz  smithbot.xyz  \n",
       "ts_diff_bins                                    \n",
       "(-3.0, -2.9]                   0             0  \n",
       "(-2.9, -2.8]                   0             0  \n",
       "(-2.8, -2.7]                   0             0  \n",
       "(-2.7, -2.6]                   0             0  \n",
       "(-2.6, -2.5]                   0             0  \n",
       "...                          ...           ...  \n",
       "(6.5, 6.6]                     0             0  \n",
       "(6.6, 6.7]                     0             0  \n",
       "(6.7, 6.8]                     0             0  \n",
       "(6.8, 6.9]                     0             0  \n",
       "(6.9, 7.0]                     0             0  \n",
       "\n",
       "[100 rows x 16 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw stack bar chart of the builder bidding distribution of a single block\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.cm as cm\n",
    "import numpy as np\n",
    "import matplotlib.ticker as ticker\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.cm as cm\n",
    "import numpy as np\n",
    "import matplotlib.ticker as ticker\n",
    "\n",
    "# 将 `ts_diff` 从毫秒转换为秒\n",
    "dftb_0930['ts_diff_secs'] = dftb_0930['ts_diff'] / 1000\n",
    "\n",
    "# 计算 ts_diff 的最小和最大值\n",
    "x_min = np.floor(dftb_0930['ts_diff_secs'].min())\n",
    "x_max = np.ceil(dftb_0930['ts_diff_secs'].max())\n",
    "print (\"min:\" + str(x_min) + \"; max:\" + str(x_max))\n",
    "\n",
    "# 创建 `ts_diff_secs` 的区间（每0.1秒）\n",
    "dftb_0930['ts_diff_bins'] = pd.cut(\n",
    "    dftb_0930['ts_diff_secs'], \n",
    "    np.arange(x_min, x_max + 0.1, 0.1)  # 使用 x_min 和 x_max\n",
    ")\n",
    "\n",
    "df_builder_info = df_builder_info.drop_duplicates(subset=['builder_pubkey', 'builder_label'])\n",
    "\n",
    "merged_df = pd.merge(dftb_0930, df_builder_info, on='builder_pubkey', how='inner')\n",
    "print(\"Merged rows:\" + str(merged_df.shape[0]))\n",
    "\n",
    "grouped = merged_df.groupby(['builder_label', 'ts_diff_bins']).size().unstack(fill_value=0)\n",
    "\n",
    "\n",
    "highlight_labels = [label.lower() for label in [\"EigenPhi\", \"rsync\", \"titan\", \"Beaver\"]]\n",
    "\n",
    "# 创建颜色映射\n",
    "labels = merged_df['builder_label'].unique()\n",
    "\n",
    "normal_colors = cm.rainbow(np.linspace(0, 1, len(labels)))\n",
    "highlight_colors = [\"red\", \"green\", \"black\", \"yellow\"] \n",
    "\n",
    "color_map = {}\n",
    "labels_list = list(labels)  # 将numpy数组转换为列表\n",
    "\n",
    "for label in labels:\n",
    "    # 如果该标签包含 highlight_labels 中的任何一个，则将其视为高亮标签\n",
    "    if any(hl in label.lower() for hl in highlight_labels):\n",
    "        color_map[label] = highlight_colors[highlight_labels.index(next(hl for hl in highlight_labels if hl in label.lower()))]\n",
    "    else:\n",
    "        color_map[label] = normal_colors[labels_list.index(label)]  # 使用列表的index方法\n",
    "\n",
    "\n",
    "ax = grouped.T.plot(kind='bar', stacked=True, color=[color_map[i] for i in labels], figsize=(10,6))\n",
    "\n",
    "# 在生成图之前，先获取并排序图例标签\n",
    "handles, labels = ax.get_legend_handles_labels()  \n",
    "labels, handles = zip(*sorted(zip(labels, handles), key=lambda t: t[0]))\n",
    "\n",
    "\n",
    "\n",
    "ax.xaxis.set_major_locator(ticker.MultipleLocator(base=10))  # 设置主要刻度为1秒\n",
    "ax.xaxis.set_minor_locator(ticker.MultipleLocator(base=1))   # 设置次要刻度为0.1秒\n",
    "\n",
    "# 逆转x轴\n",
    "ax.invert_xaxis()\n",
    "\n",
    "plt.xlabel('ts_diff (seconds)', fontsize=12)\n",
    "plt.ylabel('Bidding times', fontsize=12)\n",
    "plt.title('Block '+ str(singleBlockNumber) + ': Bidding times vs ts_diff for each builder_label')\n",
    "\n",
    "# 使用排序后的标签和句柄来创建图例\n",
    "ax.legend(handles, labels)  \n",
    "\n",
    "plt.show()\n",
    "\n",
    "# save the grouped data to clipboard\n",
    "from IPython.display import display\n",
    "grouped_transposed = grouped.transpose()\n",
    "display(grouped_transposed)\n",
    "grouped_transposed.to_clipboard(index=True, header=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5546bd72",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a5c3244",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Commented code for testing Titan builder and its pubkeys\n",
    "# df_titan_unique = df[df['builder_label'].str.contains(\"Titan\", na=False)]\n",
    "# df_titan_unique = df_titan_unique.drop_duplicates(subset=['builder_pubkey'])\n",
    "# df_titan_unique_filtered = df_titan_unique[df_titan_unique['builder_pubkey'].isin(filtered_pub_key_list)]\n",
    "# print(df_titan_unique_filtered[['builder_label', 'builder_pubkey']])\n",
    "# num_rows = df_titan_unique_filtered.shape[0]\n",
    "# print(num_rows)\n",
    "\n",
    "df_titan_blocks = df[df['builder_pubkey'].isin(titan_pub_key_list)]\n",
    "df_titan_filtered_blocks = df_titan_blocks[df_titan_blocks['block_number'] < singleBlockNumber]\n",
    "df_titan_first_1000_blocks = df_titan_filtered_blocks.sort_values(by='block_number', ascending=False).head(1000)\n",
    "# df_titan_first_1000_blocks.to_csv('titan_first_1000_blocks.csv', index=False)\n",
    "\n",
    "# print(df_titan_first_1000_blocks.head(10))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "relays = list(df['relay'].value_counts().head(5).index)\n",
    "\n",
    "fig = plt.figure(figsize = (12, 6))\n",
    "plt.title('Distribution of Winning Block Bid Times')\n",
    "\n",
    "bin_size = 25\n",
    "bins = np.arange(-12000, 12000, bin_size)\n",
    "\n",
    "df_counts = pd.DataFrame()\n",
    "for xx in range(len(relays)):\n",
    "    df_counts = pd.concat([df_counts, df[df['relay'] == relays[xx]]])\n",
    "    plt.hist([x-12000 for x in df_counts['slot_time_ms']], bins=bins, label = relays[xx], zorder = 1 - xx/100)\n",
    "\n",
    "plt.xlim([-1500, 2750])\n",
    "plt.xlabel('Slot Time [ms]')\n",
    "plt.ylabel('Count of Slots')\n",
    "plt.ylim([0, None])\n",
    "\n",
    "plt.legend(loc = 'upper right', frameon=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48ce1552",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49"
  },
  "kernelspec": {
   "display_name": "Python 3.9.9 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
